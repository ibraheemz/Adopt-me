"use strict";
var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;
  var _react = _interopRequireDefault(require("react"));
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
  class Carousel extends _react.default.Component {
    constructor(...args) {
      super(...args);
      this.state = {
        photos: [],
        active: 0
      };
      this.handleIndexClick = event => {
        this.setState({
          active: +event.target.dataset.index
        });
      };
    }
    // getDerivedStateFromProps has to be static takes a set of props & dose some filtering on them then return what ever object that we want to be merged into the state
    static getDerivedStateFromProps({media}) {
      let photos = ["http://placecorgi.com/600/600"];
      if (media.length) {
        photos = media.map(({large}) => large);
      }
      return {
        photos
      };
    }
    render() {
      const {photos, active} = this.state;
      return (
        /*#__PURE__*/_react.default.createElement("div", {
          className: "carousel"
        }, /*#__PURE__*/_react.default.createElement("img", {
          src: photos[active],
          alt: "animal"
        }), /*#__PURE__*/_react.default.createElement("div", {
          className: "carousel-smaller"
        }, photos.map((photo, index) => /*#__PURE__*/_react.default.createElement("img", {
          key: photo,
          onClick: this.handleIndexClick,
          "data-index": index,
          src: photo,
          className: index === active ? "active" : "",
          alt: "animal-thumbnail"
        }))))
      );
    }
  }
  var _default = Carousel;
  exports.default = _default;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
